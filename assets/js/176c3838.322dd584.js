"use strict";(self.webpackChunkinteractive_docs=self.webpackChunkinteractive_docs||[]).push([[726],{7268:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>l});a(6540);var n=a(4848),i=a(8453);const r={title:"Cargo TOML File",description:"Managing a binary or library dependencies with the Cargo.toml file",keywords:["fundamentals"]},o=void 0,s={id:"fundamentals/cargo-toml",title:"Cargo TOML File",description:"Managing a binary or library dependencies with the Cargo.toml file",source:"@site/docs/fundamentals/cargo-toml.md",sourceDirName:"fundamentals",slug:"/fundamentals/cargo-toml",permalink:"/docs/fundamentals/cargo-toml",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Cargo TOML File",description:"Managing a binary or library dependencies with the Cargo.toml file",keywords:["fundamentals"]},sidebar:"tutorialSidebar",previous:{title:"Invocation Methods",permalink:"/docs/fundamentals/invocation-modes"},next:{title:"CI/CD",permalink:"/docs/category/cicd"}},c={},l=[];function d(e){return(0,n.jsx)(n.Fragment,{})}const m=function(e={}){const{wrapper:t}=Object.assign({},(0,i.R)(),e.components);return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(d,e)})):d()}}}]);